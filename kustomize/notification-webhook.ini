[system]
; Web server listen address
bind  = :8080
; Retry times if errors occour while sending message
retry = 3
; Log level
level = info

; ;;;;;;;;;;;;;;;;;; Start define message handlers ;;;;;;;;;;;;;;;;;;;
; Custom name
[telegramBot-production]
; Provider's name for outgoing message. Different provider with different arguments.
provider = telegramBot
; Telegram Bot's Token
token    = 361406910:d9Ud2O6llxNUGQxSHH0MoXHMKXoiLcYefFk
; Chat ID to send message to
chatID   = -95780003 ; production notification channel

[telegramBot-stagging]
provider = telegramBot
token  = 080695487:d9Ud2O6llxNUGQxSHH0MoXHMKXoiLcYefFK
chatID = -24641155

[slackWebhook-development]
; Provider's name for outgoing message
provider = slackWebhook
; webhook url
url      = https://hooks.slack.com/services/ZPMJRPWQX4FE/LZRNFH27XGPV/jqoRWFdWje4UipcItFjAFFE

[slackBot-development]
; Provider's name for outgoing message
provider = slackBot
; Chat to send message to
chatID   = 2DRESQ2JWP9
; Token for the bot
token    = xoxb-865503926763-176502882468-CvU7QxOVaC2pEpZPh6wvCvU

[matrixUser-others]
; Note that the handler will send a message with the token in the end, the password will be used to get a token from the server, as the token in some servers will never expire, set a token argument may be more suitable
; Provider's name for outgoing message
provider = matrixUser
; Homeserver address
server   = https://im.example.com 
; User ID
userid   = @bot:im.example.com
; Token for the user.
token    = Ohb_FiGM_VrWbaf1Dq1IMQyDjDF0K_A8PmT1
; Username to login
; username = bot
; Password for the user
; password = YE>ud2ih[zCs@*DF
; Room ID to send message to
roomID   = !k5MARByGQ7SKZEiE:im.example.com

[Email-test]
; Note that the first line of the message will be the email's subject
; Provider's name for outgoing message
provider = email
; Smtp server address
server   = smtp.gmail.com
; Email address to send email
from     = username@gmail.com
; Password for the email
password = password
; The receiver list, separated by a comma
to       = another_username@gmail.com

; ;;;;;;;;;;;;;;;;;; Start define webhook handlers ;;;;;;;;;;;;;;;;;;;
; Custom name
[fluxcdGeneric-production]
; Provider's name for incoming webhook
provider          = fluxcdGeneric
; url for the webhook, custom path
path              = /fluxcdGeneric/production
; Message handlers name list, separated by a comma, will send a message with these message handlers.
messageHandlers = telegramBot-production, matrixUser-others

; [fluxcdGeneric-dev]
; provider = fluxcdGeneric
; url = /fluxcdGeneric-dev
; messageHandlers = telegramBot-dev
[huaweiCloud-test]
; Provider's name for incoming webhook
provider          = huaweiCloud
; url for the webhook, custom path
path              = /huaweiCloud
; Message handlers name list, separated by comma, will send message with these message handler.
messageHandlers = Email-test

[httpPostRaw]
; The body of the post request will be sent as a message
; Provider's name for incoming webhook
provider          = httpPostRaw
; URL for the webhook, custom path
path              = /httpPostRaw
; Message handlers name list, separated by a comma, will send a message with these message handlers.
messageHandlers = matrixUser-others

[httpPostJSON-development]
; If the post body is json, will convert to yaml and send as a message 
; Provider's name for incoming webhook
provider          = httpPostJSON 
; URL for the webhook, custom path
path              = /httpPostJSON/development
; Message handlers name list, separated by a comma, will send a message with these message handlers.
messageHandlers = slackBot-development, matrixUser-others

